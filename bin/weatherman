#!/usr/bin/env node

var minimist = require('minimist');
var WeatherMan = require('../index');

var args = minimist(process.argv.slice(2), {
    default: {
        provider: WeatherMan.YRNO,
        units: WeatherMan.CELCIUS,
        apikey: null,
        appId: null,
        lat: null,
        lng: null,
        json: false,
    },
    alias: {
        apiKey: 'apikey'
    }
});

var wm = new WeatherMan(args.provider, args.apikey, args.appId);
wm.getCurrent(args.lat, args.lng).then(function(result) {
    if (result instanceof WeatherMan.CurrentAQIResult) {
        var aqi = Math.round(result.getAQI() * 100) / 100;
        var location = result.getLocation();
        var string = result.getAQIString();
        var color = result.getAQIColor();

        if (args.json) {
            console.log(JSON.stringify({
                aqi: aqi,
                location: location,
                string: string,
                color: color,
            }));
        }
        else {
            console.log('AQI: ' + aqi);
            console.log('Location: ' + location);
            console.log('AQI String: ' + string);
            console.log('AQI Color: ' + color);
        }
    }
    else {
        var windSpeedUnits = (args.units == WeatherMan.FAHRENHEIT) ? WeatherMan.MILES : WeatherMan.KILOMETERS;
        var ampm = (args.units == WeatherMan.FAHRENHEIT) ? WeatherMan.AMPM : null;

        var temp = Math.round(result.getTemperature(args.units) * 100) / 100;
        var windChill = Math.round(result.getWindChill(args.units) * 100) / 100;
        var heatIndex = Math.round(result.getHeatIndex(args.units) * 100) / 100;
        var wind = Math.round(result.getWindSpeed(windSpeedUnits) * 100) / 100;
        var humidity = Math.round(result.getHumidity() * 100) / 100;
        var condition = result.getCondition();
        var sunrise = result.getSunriseFormatted(ampm);
        var sunset = result.getSunsetFormatted(ampm);

        if (args.json) {
            console.log(JSON.stringify({
                temperature: temp,
                temperatureUnits: args.units,
                windChill: windChill,
                heatIndex: heatIndex,
                windSpeed: wind,
                windSpeedUnits: windSpeedUnits,
                condition: condition,
                humidity: humidity,
                sunrise: sunrise,
                sunset: sunset,
            }));
        }
        else {
            console.log('Temperature: ' + temp + ' ' + args.units);
            console.log('Wind Chill: ' + windChill + ' ' + args.units);
            console.log('Heat Index: ' + heatIndex + ' ' + args.units);
            console.log('Wind Speed: ' + wind + ' ' + windSpeedUnits);
            console.log('Humidity: ' + humidity + '%');
            console.log('Condition: ' + condition);
            console.log('Sunrise: ' + sunrise);
            console.log('Sunset: ' + sunset);
        }
    }

    process.exit(0);
}).catch(function(err) {
    var message = 'Failed: ' + (err.message ? err.message : JSON.stringify(err));

    if (args.json) {
        console.error(JSON.stringify({
            error: message,
        }));
    }
    else {
        console.error(message);
    }

    process.exit(1);
});
